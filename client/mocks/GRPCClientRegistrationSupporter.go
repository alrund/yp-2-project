// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// GRPCClientRegistrationSupporter is an autogenerated mock type for the GRPCClientRegistrationSupporter type
type GRPCClientRegistrationSupporter struct {
	mock.Mock
}

type GRPCClientRegistrationSupporter_Expecter struct {
	mock *mock.Mock
}

func (_m *GRPCClientRegistrationSupporter) EXPECT() *GRPCClientRegistrationSupporter_Expecter {
	return &GRPCClientRegistrationSupporter_Expecter{mock: &_m.Mock}
}

// Registration provides a mock function with given fields: ctx, name, login, password
func (_m *GRPCClientRegistrationSupporter) Registration(ctx context.Context, name string, login string, password string) (string, error) {
	ret := _m.Called(ctx, name, login, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) string); ok {
		r0 = rf(ctx, name, login, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, string) error); ok {
		r1 = rf(ctx, name, login, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GRPCClientRegistrationSupporter_Registration_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Registration'
type GRPCClientRegistrationSupporter_Registration_Call struct {
	*mock.Call
}

// Registration is a helper method to define mock.On call
//  - ctx context.Context
//  - name string
//  - login string
//  - password string
func (_e *GRPCClientRegistrationSupporter_Expecter) Registration(ctx interface{}, name interface{}, login interface{}, password interface{}) *GRPCClientRegistrationSupporter_Registration_Call {
	return &GRPCClientRegistrationSupporter_Registration_Call{Call: _e.mock.On("Registration", ctx, name, login, password)}
}

func (_c *GRPCClientRegistrationSupporter_Registration_Call) Run(run func(ctx context.Context, name string, login string, password string)) *GRPCClientRegistrationSupporter_Registration_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string), args[3].(string))
	})
	return _c
}

func (_c *GRPCClientRegistrationSupporter_Registration_Call) Return(_a0 string, _a1 error) *GRPCClientRegistrationSupporter_Registration_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewGRPCClientRegistrationSupporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewGRPCClientRegistrationSupporter creates a new instance of GRPCClientRegistrationSupporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGRPCClientRegistrationSupporter(t mockConstructorTestingTNewGRPCClientRegistrationSupporter) *GRPCClientRegistrationSupporter {
	mock := &GRPCClientRegistrationSupporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
