// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// GRPCClientLoginSupporter is an autogenerated mock type for the GRPCClientLoginSupporter type
type GRPCClientLoginSupporter struct {
	mock.Mock
}

type GRPCClientLoginSupporter_Expecter struct {
	mock *mock.Mock
}

func (_m *GRPCClientLoginSupporter) EXPECT() *GRPCClientLoginSupporter_Expecter {
	return &GRPCClientLoginSupporter_Expecter{mock: &_m.Mock}
}

// Login provides a mock function with given fields: ctx, login, password
func (_m *GRPCClientLoginSupporter) Login(ctx context.Context, login string, password string) (string, error) {
	ret := _m.Called(ctx, login, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string) string); ok {
		r0 = rf(ctx, login, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string) error); ok {
		r1 = rf(ctx, login, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GRPCClientLoginSupporter_Login_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Login'
type GRPCClientLoginSupporter_Login_Call struct {
	*mock.Call
}

// Login is a helper method to define mock.On call
//  - ctx context.Context
//  - login string
//  - password string
func (_e *GRPCClientLoginSupporter_Expecter) Login(ctx interface{}, login interface{}, password interface{}) *GRPCClientLoginSupporter_Login_Call {
	return &GRPCClientLoginSupporter_Login_Call{Call: _e.mock.On("Login", ctx, login, password)}
}

func (_c *GRPCClientLoginSupporter_Login_Call) Run(run func(ctx context.Context, login string, password string)) *GRPCClientLoginSupporter_Login_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(string))
	})
	return _c
}

func (_c *GRPCClientLoginSupporter_Login_Call) Return(_a0 string, _a1 error) *GRPCClientLoginSupporter_Login_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

type mockConstructorTestingTNewGRPCClientLoginSupporter interface {
	mock.TestingT
	Cleanup(func())
}

// NewGRPCClientLoginSupporter creates a new instance of GRPCClientLoginSupporter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGRPCClientLoginSupporter(t mockConstructorTestingTNewGRPCClientLoginSupporter) *GRPCClientLoginSupporter {
	mock := &GRPCClientLoginSupporter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
