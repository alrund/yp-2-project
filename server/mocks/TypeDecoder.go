// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// TypeDecoder is an autogenerated mock type for the TypeDecoder type
type TypeDecoder struct {
	mock.Mock
}

type TypeDecoder_Expecter struct {
	mock *mock.Mock
}

func (_m *TypeDecoder) EXPECT() *TypeDecoder_Expecter {
	return &TypeDecoder_Expecter{mock: &_m.Mock}
}

// Decode provides a mock function with given fields: data
func (_m *TypeDecoder) Decode(data []byte) []byte {
	ret := _m.Called(data)

	var r0 []byte
	if rf, ok := ret.Get(0).(func([]byte) []byte); ok {
		r0 = rf(data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// TypeDecoder_Decode_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Decode'
type TypeDecoder_Decode_Call struct {
	*mock.Call
}

// Decode is a helper method to define mock.On call
//  - data []byte
func (_e *TypeDecoder_Expecter) Decode(data interface{}) *TypeDecoder_Decode_Call {
	return &TypeDecoder_Decode_Call{Call: _e.mock.On("Decode", data)}
}

func (_c *TypeDecoder_Decode_Call) Run(run func(data []byte)) *TypeDecoder_Decode_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte))
	})
	return _c
}

func (_c *TypeDecoder_Decode_Call) Return(_a0 []byte) *TypeDecoder_Decode_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewTypeDecoder interface {
	mock.TestingT
	Cleanup(func())
}

// NewTypeDecoder creates a new instance of TypeDecoder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTypeDecoder(t mockConstructorTestingTNewTypeDecoder) *TypeDecoder {
	mock := &TypeDecoder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
